<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>Super Insurance</title>
  </head>
  <body>
    <%- include('partials/navbar.ejs') %>
    <%= message %>
    <form action=/quote/simulate method="post">
      <label for="ageSpaceship">How old is your spaceship :
      <input type="number" name="ageSpaceship" min="1" required><br>
      </label><br>
      <label for="spaceshipClass">Select the class of your spaceship :
        <select name="spaceshipClass" id="spaceshipClass" required>
          <option disabled selected value> -- select an option -- </option>
          <% for (let spaceshipClass of spaceshipClasses){ %>
            <option value="<%= spaceshipClass.name%>"><%= spaceshipClass.name%></option>
          <%}%>
        </select>
      </label><br><br>
      <label for="spaceshipModel">Select the model of your spaceship :
        <select name="spaceshipModel" id="spaceshipModel" required>
          <option disabled selected value> -- select an option -- </option>
        </select>
      </label><br>
      <fieldset>
        <legend>Usage of lightspeed travel :</legend>
        <input type="radio"  name="lightspeed"  id="regular"
               value="regular"  required />
        <label for="regular">regular</label>
        <input type="radio"  name="lightspeed"  id="exceptional"
               value="exceptional" />
        <label for="exceptional">exceptional</label>
        <input type="radio"  name="lightspeed"  id="noHyperdrive"
               value="nohyperdrive" />
        <label for="noHyperdrive">no hyperdrive installed ( lightspeed travel impossible )</label>
      </fieldset>
      <fieldset>
        <legend>Do you regularly travel to outer rim systems ? :</legend>
        <input type="radio"  name="outerRimTravel"  id="yes"
               value="true"  required/>
        <label for="yes">Yes</label>
        <input type="radio"  name="outerRimTravel"  id="no"
               value="false" />
        <label for="no">No</label>
      </fieldset>
      <fieldset>
        <legend>Do you need a breakdown&rescue service in the event of being stranded in an outer rim system ? :</legend>
        <input type="radio"  name="strandedOuterRim"  id="yes"
               value="true" required/>
        <label for="yes">Yes</label>
        <input type="radio"  name="strandedOuterRim"  id="no"
               value="false" />
        <label for="no">No</label>
      </fieldset>
      <br/>
      <input type="submit" value="simulate">
    </form>
    <% if (typeof simulatedQuote !== 'undefined') { %>
      <h3>Base price</h3>
      <%= simulatedQuote.baseMonthlyPrice %> galactic credits/month
      <br/>
      <h3>Damage to third party</h3>
      <p>
        <% if (simulatedQuote.damageToThirdParty.included) {%>
          <strong>Included</strong> : V
          <br/>
          <strong>Deductible</strong> : <%=simulatedQuote.damageToThirdParty.deductible%> galactic credit
        <% } else { %>
          <strong>Included</strong> : X
          <br/>
        <% } %>
      </p>
      <h3>Damage to self</h3>
      <p>
        <% if (simulatedQuote.damageToSelf.included) {%>
        <strong>Included</strong> : V
        <br/>
        <strong>Deductible</strong> : <%=simulatedQuote.damageToSelf.deductible%> galactic credit
        <% } else { %>
          <strong>Included</strong> : X
          <br/>
        <% } %>
      </p>
      <h3>Breakdown&Rescue in outer rim systems</h3>
      <p>
        <% if (simulatedQuote.strandedOuterRimGuarantee.included) {%>
        <strong>Included</strong> : V
        <br/>
        <strong>Supplement</strong> : <%=simulatedQuote.strandedOuterRimGuarantee.supplementMonthlyPrice%> galactic credit/month
        <% } else { %>
          <strong>Included</strong> : X
          <br/>
        <% } %>
      </p>
    <% } %>
  <% if (typeof simulatedQuote !== 'undefined') { %>
    <button id="save_quote">Save quote</button>
    <button id="save_and_subscribe">Subscribe directly</button>
    <span id="basePrice" hidden><%= simulatedQuote.baseMonthlyPrice %></span>
    <span id="includeDamageFromThirdParty" hidden><%= simulatedQuote.damageToThirdParty.included%></span>
    <span id="deductionDamageFromThirdParty" hidden><%=simulatedQuote.damageToThirdParty.deductible%></span>
    <span id="includeDamageToSelf" hidden><%= simulatedQuote.damageToSelf.included %></span>
    <span id="deductionDamageToSelf" hidden><%=simulatedQuote.damageToSelf.deductible%></span>
    <span id="includeBreakDownAndRescue" hidden><%= simulatedQuote.strandedOuterRimGuarantee.included %></span>
    <span id="priceBreakDownAndRescue" hidden><%=simulatedQuote.strandedOuterRimGuarantee.supplementMonthlyPrice%></span>
  <% } %>
  </body>
</html>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script>

  const spaceshipModelsFighter = JSON.parse('<%- JSON.stringify(spaceshipModelsFighter); %>');
  const spaceshipModelsCruiserBattleship = JSON.parse('<%- JSON.stringify(spaceshipModelsCruiserBattleship); %>');
  const spaceshipModelsShuttleCargo = JSON.parse('<%- JSON.stringify(spaceshipModelsShuttleCargo); %>');

  $('#spaceshipClass').on('change', function() {
  const selectedClass = $(this).val();

  $('#spaceshipModel').empty();
  if(selectedClass === 'Fighter'){
    for(let fighter of spaceshipModelsFighter){
      $('#spaceshipModel').append("<option value='" + fighter.name + "'>" + fighter.name + "</option>");
    }
  } else if(selectedClass === 'Cruiser/Battleship'){
    for(let cruiserBattleship of spaceshipModelsCruiserBattleship){
      $('#spaceshipModel').append("<option value='" + cruiserBattleship.name + "'>" + cruiserBattleship.name + "</option>");
    }
  } else if(selectedClass === 'Shuttle/Cargo'){
      for(let shuttleCargo of spaceshipModelsShuttleCargo){
        $('#spaceshipModel').append("<option value='" + shuttleCargo.name + "'>" + shuttleCargo.name + "</option>");
      }
  }
})
</script>

<script>
  const saveButton = document.getElementById("save_quote");
  const saveAndSubscribeDirectly = document.getElementById("save_and_subscribe")

  saveButton.addEventListener("click", async (e) => {
    e.preventDefault();
    let customerId;
    let isConnected = false;

    /* Check if user is already connected */
    await fetch("/profile", {
      method: 'GET',
      headers: { "Authorization": "Bearer " + sessionStorage.getItem("team_galaxy_access_token") }
    }).then(async response => {
      if(response.ok){
        isConnected = true;
        const data = await response.json()
        customerId = data.id;
      }else{
        alert("Please, load into your account to save this quote.");
      }
    });
    if(!isConnected){
      return;
    }
    const responseCreateQuote = await fetch("/quote/create", {
      method: 'POST',
      body: JSON.stringify({
        "basePrice":parseInt(document.getElementById("basePrice").innerHTML),
        "includeDamageFromThirdParty":document.getElementById("includeDamageFromThirdParty").innerHTML,
        "deductionDamageFromThirdParty":parseInt(document.getElementById("deductionDamageFromThirdParty").innerHTML),
        "includeDamageToSelf":document.getElementById("includeDamageToSelf").innerHTML,
        "deductionDamageToSelf":parseInt(document.getElementById("deductionDamageToSelf").innerHTML),
        "includeBreakDownAndRescue":document.getElementById("includeBreakDownAndRescue").innerHTML,
        "priceBreakDownAndRescue":parseInt(document.getElementById("priceBreakDownAndRescue").innerHTML),
      }),
      headers: { "Content-Type": "application/json" }
    });
    if (responseCreateQuote.ok) {
      alert("Quote registered");
    }else{
      alert("Error");
    }
  })

  saveAndSubscribeDirectly.addEventListener("click", async (e) => {
    e.preventDefault();
    let customerId;
    let isConnected = false;

    /* Check if user is already connected */
    await fetch("/profile", {
      method: 'GET',
      headers: { "Authorization": "Bearer " + sessionStorage.getItem("team_galaxy_access_token") }
    }).then(async response => {
      if(response.ok){
        isConnected = true;
        const data = await response.json()
        customerId = data.id;
      }else{
        alert("Please, load into your account to save this quote.");
      }
    });
    if(!isConnected){
      return;
    }
    const response = await fetch("/quote/createAndSubscribe", {
      method: 'POST',
      body: JSON.stringify({
        "basePrice":parseInt(document.getElementById("basePrice").innerHTML),
        "includeDamageFromThirdParty":document.getElementById("includeDamageFromThirdParty").innerHTML,
        "deductionDamageFromThirdParty":parseInt(document.getElementById("deductionDamageFromThirdParty").innerHTML),
        "includeDamageToSelf":document.getElementById("includeDamageToSelf").innerHTML,
        "deductionDamageToSelf":parseInt(document.getElementById("deductionDamageToSelf").innerHTML),
        "includeBreakDownAndRescue":document.getElementById("includeBreakDownAndRescue").innerHTML,
        "priceBreakDownAndRescue":parseInt(document.getElementById("priceBreakDownAndRescue").innerHTML),
      }),
      headers: { "Content-Type": "application/json" }
    })
    if (response.ok) {
      const data = await response.json()
      const quoteId = data.id;
      alert("You will be redirected to payment page. \n Your quote has been automatically save in your user home if you want to continue later")
      location.href = `/payment/${quoteId}`
    }
  })
</script>